{
    "navbar": {
        "about": "Sobre mi",
        "skills": "Habilidades",
        "work_experience": "Experiencia Laboral",
        "projects": "Proyectos",
        "certifications": "Certificaciones",
        "contact": "Contacto"
    },
    "presentation": {
        "my_name_is": "Soy Leila Salguero",
        "description": "‚ú® Full Stack Developer con 1 a√±o de experiencia formal, especializada en Java, Spring Boot y React. He trabajado en proyectos tanto en Frontend como en Backend, desarrollando APIs REST, gestionando bases de datos y creando interfaces web intuitivas. ‚úÖ Me apasiona el desarrollo Backend, por lo que actualmente estoy ampliando mis conocimientos en Golang, Gin y AWS Cloud, con muchas ganas de seguir aprendiendo y creciendo en el mundo IT. Me considero una persona perfeccionista y dedicada, siempre asegur√°ndome de que cada detalle est√© cuidadosamente revisado para ofrecer soluciones de calidad. üöÄ",
        "download_cv": "Descargar mi CV"
    },
    "skills": {
        "title": "https://leila-salguero.vercel.app/static/media/Skills.4314ac89f2acdcede38a.mp4",
        "accordion": {
            "development": "Desarrollo",
            "testingQA": "Pruebas de Calidad",
            "tools": "Herramientas"
        }
    },
    "work_experience": {
        "title": "Experiencia Laboral",
        "leafnoise_back": {
            "fromToDate": "Feb. 2025 - Actualidad",
            "resume": []
        },
        "itlg_back": {
            "fromToDate": "Ene. 2024 - Jun 2024",
            "resume": [
                "‚óè Creaci√≥n y mantenimiento de APIs utilizando Java y Spring Boot",
                "‚óè Migraci√≥n de Base de datos PostgreSQL a MySQL"
            ]
        },
        "itlg_front": {
            "fromToDate": "Ago. 2023 - Ene. 2024",
            "resume": [
                "Desarrollo de interfaces web atractivas y funcionales ‚óè",
                "Implementaci√≥n de metodolog√≠as √°giles ‚óè",
                "Conexi√≥n entre frontend y APIs utilizando React-Query ‚óè",
                "Soporte para la resoluci√≥n de Bugs productivos ‚óè"
            ]
        }
    },
    "projects": {
        "title": "Mis Proyectos",
        "tutor_ia": {
            "type": "Proyecto en equipo",
            "description": "TutorIA es una aplicaci√≥n educativa que usa inteligencia artificial para personalizar el aprendizaje, permitiendo a los usuarios avanzar a su propio ritmo con recomendaciones y actividades interactivas. Desarrollada con una arquitectura de microservicios, utiliza Angular para el frontend, Java para el backend y Python para la inteligencia artificial. La IA se basa en el modelo de lenguaje avanzado NVIDIA Nemotron y FastAPI para crear APIs eficientes, adaptando el contenido a las necesidades de cada usuario y ofreciendo una experiencia de aprendizaje personalizada y escalable.",
            "status": "Finalizado",
            "deploy": "Ver el Proyecto"
        },
        "sushi_chatbot": {
            "type": "Desaf√≠o T√©cnico",
            "description": "Sushi Chatbot es un proyecto que implementa un chatbot para un restaurante de sushi, utilizando inteligencia artificial de Cohere para responder preguntas frecuentes de manera m√°s interactiva y din√°mica. Los usuarios pueden ver el men√∫, realizar pedidos y consultar dudas frecuentes. El chatbot es capaz de entender consultas relacionadas con pedidos, ingredientes, disponibilidad, entre otros. Est√° construido con Node.js, React, MongoDB. Adem√°s, el modelo de Cohere se integra para ofrecer respuestas m√°s naturales y precisas a los usuarios.",
            "status": "Finalizado",
            "deploy": "Ver el Proyecto"
        },
        "henry_videogames": {
            "type": "Proyecto individual",
            "description": "Single Page creada utilizando React, Redux, Node Js, Express, Sequelize, PostgreSQL, entre otras herramientas. En este proyecto puedes ver m√°s de 100 juegos en diferentes p√°ginas, buscar juegos por nombre, ver su descripci√≥n, filtrarlos por ubicaci√≥n, ordenarlos en orden Ascendente, Descendente o por su Rating. Tambi√©n puedes crear juegos, actualizarlos, eliminarlos y/o guardarlos en tus favoritos.",
            "status": "Finalizado",
            "deploy": "Ver el Proyecto"
        },
        "rick_and_morty": {
            "type": "Proyecto individual",
            "description": "Single Page con tem√°tica de Rick and Morty. Permite buscar personajes al azar, por id, agregarlos a favoritos, aplicar filtros, ordenamientos y eliminar personajes buscados. Las T√©cnologias que se utilizaron para crear esta p√°gina fueron React, Redux, Html, Css, Node Js, Express, Sequelize y PostgreSQL.",
            "status": "Finalizado",
            "deploy": "Ver el Proyecto"
        },
        "nature_xtreme": {
            "type": "Proyecto en equipo",
            "description": "E-Commerce de ropa para actividades al aire Libre.Cuenta con un perfil de usuario para ver productos, agregarlos a favoritos y realizar compras y un perfil de administrador para controlar stock de productos, modificar y crear nuevos articulos y ver los usuarios registrados en la p√°gina. Adem√°s cuenta con un blog con informaci√≥n sobre sitios en los cuales podes realizar este tipo de actividades. En este proyecto grupal utilizamos tecnolog√≠as tales como Chacra UI, Typescript, Express, TypeORM, entre otras.",
            "status": "Finalizado",
            "deploy": "Ver el Proyecto"
        },
        "stock_controller": {
            "type": "Proyecto en equipo",
            "description": "Proyecto de Control de Stock para empresas. Cuenta con una seccion home donde podr√° visualizar todas las empresas asociadas y podr√° crear nuevas. Segun su elecci√≥n en la pantalla home ser√° redirigido a crear una nueva compa√±ia o a ver los movimientos de la compa√±ia seleccionada. En la secci√≥n de movimientos podr√° filtrar los mismos segun varias caracteristicas del producto, tales como su codigo, nombre o marca y/o ordenarlos. Adem√°s en la secci√≥n de productos, podr√° ver los productos asociados a esa compa√±ia, modificarlos, eliminarlos y crear nuevos.",
            "status": "En Desarrollo",
            "deploy": "A√∫n no publicado"
        },
        "paycash_people": {
            "type": "Desaf√≠o T√©cnico",
            "description": "Implementa una API RESTful para gestionar un cat√°logo de personas, permitiendo realizar operaciones CRUD (crear, leer, actualizar, eliminar). Utiliza los patrones CQRS y Mediator para gestionar el flujo de datos de manera eficiente. El backend est√° construido con Node.js, Express y Sequelize, mientras que el frontend est√° desarrollado con React.js. Los datos se almacenan en una base de datos MySQL desplegada en AWS RDS. El proyecto tambi√©n incluye una configuraci√≥n de Docker para despliegue local, proporcionando una forma f√°cil de ejecutar la API en un entorno containerizado.",
            "status": "Finalizado",
            "deploy": "Ver el Proyecto"
        },
        "people_manager": {
            "type": "Desaf√≠o T√©cnico",
            "description": "Proyecto de gesti√≥n de usuarios que proporciona una API RESTful para listar y crear usuarios. Cuenta con un backend desarrollado en Java con Spring Boot y un frontend en React.js. El proyecto no utiliza una base de datos, ya que, seg√∫n lo solicitado en el desaf√≠o, los datos se almacenan en memoria. Aunque incluye una interfaz de usuario, su objetivo principal fue desarrollar una API sencilla para la gesti√≥n de usuarios.",
            "status": "Finalizado",
            "deploy": "A√∫n no publicado"
        },
        "nancy_store": {
            "type": "Proyecto en equipo",
            "description": "E-commerce version Mobile. App para reservas de compras y retiros con take away en almacen local",
            "status": "En Desarrollo",
            "deploy": "A√∫n no publicado"
        },
        "stock_controll": {
            "type": "Proyecto individual",
            "description": "Proyecto de Control de Stock dedicado a compras. Cuenta con las siguientes vistas: - Home de presentaci√≥n, donde podes eleg√≠r visualizar los productos o proveedores. - Listado de productos registrados - Listado de proveedores registrados - Creaci√≥n de productos - Creaci√≥n de proveedores",
            "status": "Finalizado",
            "deploy": "A√∫n no publicado"
        },
        "earthquakes": {
            "type": "Desaf√≠o T√©cnico",
            "description": "Earthquakes es un proyecto que se encarga de mostrar datos sismol√≥gicos de todo el mundo. Consume datos de la api de earthquake.usgs.gov y los persiste en la base de datos propia. Ademas cuenta con la creaci√≥n de comentarios de cada uno de los terremotos. Si bien este proyecto cuenta con una interfaz de usuario su principal objetivo fue obtener conocimientos sobre las tecnolog√≠as implementadas en el area Backend.",
            "status": "Finalizado",
            "deploy": "A√∫n no publicado"
        }
    },
    "certificates": "Mis Certificaciones",
    "contact": {
        "title": "Contactame",
        "form": {
            "subtitle": "Enviame un email",
            "name": "Nombre",
            "name_placeholder": "Ej: Leila",
            "lastname": "Apellido",
            "lastname_placeholder": "Ej: Salguero",
            "email": "Email",
            "email_placeholder": "Ej: ejemplo@gmail.com",
            "message": "Mensaje",
            "message_placeholder": "Ej: Escribe tu mensaje aqu√≠ ...",
            "error": "Debe completar todos los campos",
            "submit": "Enviar"
        }
    }
}